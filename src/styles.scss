
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$warm-up-Project-primary: mat.define-palette(mat.$indigo-palette);
$warm-up-Project-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$warm-up-Project-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$warm-up-Project-theme: mat.define-light-theme((
  color: (
    primary: $warm-up-Project-primary,
    accent: $warm-up-Project-accent,
    warn: $warm-up-Project-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($warm-up-Project-theme);

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }


$size__site_content_width: 1024px;

/* Media Queries */ 
$media_queries : (
    'mobile'    : unquote("only screen and (max-width: 667px)"),
    'tablet'    : unquote("only screen and (min-width: 667px) and (max-width: 1023px)"),
    'desktop'   : unquote("only screen and (min-width: 1025px)"),
    'retina2'   : unquote("only screen and (-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi)"),
    'retina3'   : unquote("only screen and (-webkit-min-device-pixel-ratio: 3) and (min-resolution: 288dpi)"),
    'landscape' : unquote("screen and (orientation:landscape) "),    
    'portrait'  : unquote("screen and (orientation:portrait) ")
);

@mixin for_breakpoint($breakpoints) {
    $conditions : ();
    @each $breakpoint in $breakpoints {
        // If the key exists in the map
        $conditions: append(
            $conditions,
            #{inspect(map-get($media_queries, $breakpoint))},
            comma
        );
    }

    @media #{$conditions} {
        @content;
    }

}
